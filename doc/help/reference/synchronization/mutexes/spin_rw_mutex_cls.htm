<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="reference">
<meta name="DC.Title" content="spin_rw_mutex Class">
<meta name="DC.subject" content="spin_rw_mutex Class">
<meta name="keywords" content="spin_rw_mutex Class">
<meta name="DC.Relation" scheme="URI" content="../../../reference/synchronization/mutexes.htm">
<meta name="DC.Relation" scheme="URI" content="readerwritermutex_concept.htm">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="spin_rw_mutex_cls">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="../../../intel_css_styles.css">
<title>spin_rw_mutex Class</title>
</head>
<body id="spin_rw_mutex_cls">
 <!-- ==============(Start:NavScript)================= -->
 <script src="..\..\..\NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(3);</script>
 <!-- ==============(End:NavScript)================= -->
<a name="spin_rw_mutex_cls"><!-- --></a>


    <h1 class="topictitle1">spin_rw_mutex Class</h1>

    
<div><div class="section"><h2 class="sectiontitle">Summary</h2>
        <p>Class that models ReaderWriterMutex Concept that is unfair and not scalable.</p>

        </div>
<div class="section"><h2 class="sectiontitle">Syntax</h2>
        <pre>class spin_rw_mutex;</pre>
        </div>
<div class="section"><h2 class="sectiontitle">Header</h2>
        <pre>#include "tbb/spin_rw_mutex.h"</pre>
        </div>
<div class="section"><h2 class="sectiontitle">Description</h2>
        <p>A <samp class="codeph">spin_rw_mutex</samp> models the ReaderWriterMutex Concept. A <samp class="codeph">spin_rw_mutex</samp> is not scalable, fair, or recursive. It is ideal when the lock is lightly contended and is held for only a few machine instructions. If a thread has to wait to acquire a <samp class="codeph">spin_rw_mutex</samp>, it busy waits, which can degrade system performance if the wait is long. However, if the wait is typically short, a <samp class="codeph">spin_rw_mutex</samp> significantly improves performance compared to other mutexes..</p>

        </div>
<div class="section"><h2 class="sectiontitle">Members</h2>
        <p>See ReaderWriterMutex concept.</p>
</div>

        </div>
 
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="../../../reference/synchronization/mutexes.htm">Mutexes</a></div>
</div>
<div class="See Also">
<h2>See Also</h2>
<div class="linklist">
<div><a href="readerwritermutex_concept.htm">ReaderWriterMutex Concept</a></div></div>
</div>
</body>
</html>
