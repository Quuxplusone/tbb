
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Primary Components">
<meta name="DC.subject" content="Primary Components">
<meta name="keywords" content="Primary Components">
<meta name="DC.Relation" scheme="URI" content="../../reference/flow_graph.htm">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="primary_components">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="../../intel_css_styles.css">
<title>Primary Components</title>
</head>
<body id="primary_components">
 <!-- ==============(Start:NavScript)================= -->
 <script src="../../NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; Threading Building Blocks Documentation, version 4.2</em></p>
<a name="primary_components"><!-- --></a>

 
  <h1 class="topictitle1">Primary Components</h1>
 
   
  <div> 
	 <p>There are 3 types of components used to implement a graph: 
	 </p>
 
	 <ul type="disc"> 
		<li> 
		  <p>A 
			 <span class="keyword">graph</span> object 
		  </p>
 
		</li>
 
		<li> 
		  <p>Nodes 
		  </p>
 
		</li>
 
		<li> 
		  <p>Edges 
		  </p>
 
		</li>
 
	 </ul>
 
	 <p>The 
		<span class="keyword">graph</span> object is the owner of the tasks created on
		behalf of the flow graph. Users can wait on the 
		<span class="keyword">graph</span> if they need to wait for the completion of all
		of the tasks related to the flow graph execution. One can also register
		external interactions with the 
		<span class="keyword">graph</span> and run tasks under the ownership of the flow
		graph. 
	 </p>
 
	 <p>Nodes invoke user-provided function objects or manage messages as the
		flow to/from other nodes. There are pre-defined nodes that buffer, filter,
		broadcast or order items as they flow through the graph. 
	 </p>
 
	 <p>Edges are the connections between the nodes, created by calls to the 
  <samp class="codeph">make_edge</samp> function. 
  </p>
 
  	 <div class="Note"><h3 class="NoteTipHead">
					Caution</h3> 
                <p>
                The tasks related to the flow graph are executed in the task_group_context of that
                flow graph.  If no context is specified when a flow graph is created, a
                new context is created and bound to the enclosing context.
                </p>

                <p>
                The context a body of a flow graph node is executed in is that node's graph.
                If a cancellation or exception occurs in that node, the context of its
                graph is cancelled, and if necessary the exception thrown is passed to
                the enclosing context for further processing.
                </p>

	 </div> 
  </div>


<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong> <a href="../../reference/flow_graph.htm">Flow Graph</a></div>
</div>
<div></div>

</body>
</html>
